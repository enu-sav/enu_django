# Generated by Django 3.2.6 on 2021-10-28 18:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('uctovnictvo', '0006_zamestnanec_cislo_zamestnanca'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalZamestnanec',
            fields=[
                ('zamestnanecdohodar_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='uctovnictvo.zamestnanecdohodar')),
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('bankovy_kontakt', models.CharField(help_text='Zadajte IBAN bankového účtu.', max_length=200, null=True, verbose_name='Bankový kontakt')),
                ('adresa_ulica', models.CharField(blank=True, max_length=200, null=True, verbose_name='Adresa – ulica a číslo domu')),
                ('adresa_mesto', models.CharField(max_length=200, null=True, verbose_name='Adresa – PSČ a mesto')),
                ('adresa_stat', models.CharField(max_length=100, null=True, verbose_name='Adresa – štát')),
                ('datum_aktualizacie', models.DateField(blank=True, editable=False, null=True, verbose_name='Dátum aktualizácie')),
                ('email', models.EmailField(max_length=200, null=True, verbose_name='Email')),
                ('titul_pred_menom', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titul pred menom')),
                ('meno', models.CharField(max_length=200, verbose_name='Meno')),
                ('priezvisko', models.CharField(max_length=200, verbose_name='Priezvisko')),
                ('titul_za_menom', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titul za menom')),
                ('rodne_cislo', models.CharField(max_length=20, null=True, verbose_name='Rodné číslo')),
                ('poznamka', models.CharField(blank=True, max_length=200, verbose_name='Poznámka')),
                ('datum_nar', models.DateField(null=True, verbose_name='Dátum narodenia')),
                ('rod_priezvisko', models.CharField(blank=True, max_length=100, null=True, verbose_name='Rodné priezvisko')),
                ('miesto_nar', models.CharField(max_length=100, null=True, verbose_name='Miesto narodenia')),
                ('st_prislusnost', models.CharField(max_length=100, null=True, verbose_name='Štátna príslušnosť')),
                ('stav', models.CharField(max_length=100, null=True, verbose_name='Stav')),
                ('poberatel_doch', models.CharField(choices=[('ano', 'Áno'), ('nie', 'Nie')], max_length=10, null=True, verbose_name='Poberateľ dôchodku')),
                ('typ_doch', models.CharField(blank=True, choices=[('starobny', 'starobný'), ('invalidny', 'invalidný'), ('invalidny_vysl', 'invalidný výsluhový'), ('vysluhovy', 'výsluhový po dovŕšení dôchodkového veku'), ('predcasny', 'predčasný (poberateľovi zanikne nárok na výplatu predčasného dôchodku)')], max_length=100, null=True, verbose_name='Typ dôchodku')),
                ('datum_doch', models.DateField(blank=True, help_text='Zadajte dátum vzniku dôchodku', null=True, verbose_name='Dôchodca od')),
                ('ztp', models.CharField(choices=[('ano', 'Áno'), ('nie', 'Nie')], help_text="Uveďte, či osoba je 'ZŤP'", max_length=10, verbose_name='ZŤP')),
                ('datum_ztp', models.DateField(blank=True, help_text="Ak je osoba 'ZŤP, zadajte dátum vzniku ZŤP", null=True, verbose_name='ZŤP od')),
                ('poistovna', models.CharField(choices=[('VsZP', 'VšZP'), ('Dovera', 'Dôvera'), ('Union', 'Union')], max_length=20, null=True, verbose_name='Zdravotná poisťovňa')),
                ('cop', models.CharField(max_length=20, null=True, verbose_name='Číslo OP')),
                ('cislo_zamestnanca', models.CharField(max_length=50, null=True, verbose_name='Číslo zamestnanca')),
                ('zapocitane_roky', models.IntegerField(blank=True, help_text='Započítané celé roky z predchádzajúcich zamestnaní. Nevyplňovať pre dohodára', null=True, verbose_name='Započítané roky')),
                ('zapocitane_dni', models.IntegerField(blank=True, help_text='Započítané dni z predchádzajúcich zamestnaní. Nevyplňovať pre dohodára', null=True, verbose_name='Započítané dni')),
                ('zamestnanie_od', models.DateField(blank=True, help_text='Zadajte dátum nástupu do zamestnanie v EnÚ. Nevyplňovať pre dohodára', null=True, verbose_name='Zamestnanie v EnÚ od')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('polymorphic_ctype', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical Zamestnanec',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDohodar',
            fields=[
                ('zamestnanecdohodar_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='uctovnictvo.zamestnanecdohodar')),
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('bankovy_kontakt', models.CharField(help_text='Zadajte IBAN bankového účtu.', max_length=200, null=True, verbose_name='Bankový kontakt')),
                ('adresa_ulica', models.CharField(blank=True, max_length=200, null=True, verbose_name='Adresa – ulica a číslo domu')),
                ('adresa_mesto', models.CharField(max_length=200, null=True, verbose_name='Adresa – PSČ a mesto')),
                ('adresa_stat', models.CharField(max_length=100, null=True, verbose_name='Adresa – štát')),
                ('datum_aktualizacie', models.DateField(blank=True, editable=False, null=True, verbose_name='Dátum aktualizácie')),
                ('email', models.EmailField(max_length=200, null=True, verbose_name='Email')),
                ('titul_pred_menom', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titul pred menom')),
                ('meno', models.CharField(max_length=200, verbose_name='Meno')),
                ('priezvisko', models.CharField(max_length=200, verbose_name='Priezvisko')),
                ('titul_za_menom', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titul za menom')),
                ('rodne_cislo', models.CharField(max_length=20, null=True, verbose_name='Rodné číslo')),
                ('poznamka', models.CharField(blank=True, max_length=200, verbose_name='Poznámka')),
                ('datum_nar', models.DateField(null=True, verbose_name='Dátum narodenia')),
                ('rod_priezvisko', models.CharField(blank=True, max_length=100, null=True, verbose_name='Rodné priezvisko')),
                ('miesto_nar', models.CharField(max_length=100, null=True, verbose_name='Miesto narodenia')),
                ('st_prislusnost', models.CharField(max_length=100, null=True, verbose_name='Štátna príslušnosť')),
                ('stav', models.CharField(max_length=100, null=True, verbose_name='Stav')),
                ('poberatel_doch', models.CharField(choices=[('ano', 'Áno'), ('nie', 'Nie')], max_length=10, null=True, verbose_name='Poberateľ dôchodku')),
                ('typ_doch', models.CharField(blank=True, choices=[('starobny', 'starobný'), ('invalidny', 'invalidný'), ('invalidny_vysl', 'invalidný výsluhový'), ('vysluhovy', 'výsluhový po dovŕšení dôchodkového veku'), ('predcasny', 'predčasný (poberateľovi zanikne nárok na výplatu predčasného dôchodku)')], max_length=100, null=True, verbose_name='Typ dôchodku')),
                ('datum_doch', models.DateField(blank=True, help_text='Zadajte dátum vzniku dôchodku', null=True, verbose_name='Dôchodca od')),
                ('ztp', models.CharField(choices=[('ano', 'Áno'), ('nie', 'Nie')], help_text="Uveďte, či osoba je 'ZŤP'", max_length=10, verbose_name='ZŤP')),
                ('datum_ztp', models.DateField(blank=True, help_text="Ak je osoba 'ZŤP, zadajte dátum vzniku ZŤP", null=True, verbose_name='ZŤP od')),
                ('poistovna', models.CharField(choices=[('VsZP', 'VšZP'), ('Dovera', 'Dôvera'), ('Union', 'Union')], max_length=20, null=True, verbose_name='Zdravotná poisťovňa')),
                ('cop', models.CharField(max_length=20, null=True, verbose_name='Číslo OP')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('polymorphic_ctype', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical Dohodár',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
