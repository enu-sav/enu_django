# Generated by Django 3.2.6 on 2021-10-28 16:34

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uctovnictvo.models
import uctovnictvo.storage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dodavatel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bankovy_kontakt', models.CharField(help_text='Zadajte IBAN bankového účtu.', max_length=200, null=True, verbose_name='Bankový kontakt')),
                ('adresa_ulica', models.CharField(blank=True, max_length=200, null=True, verbose_name='Adresa – ulica a číslo domu')),
                ('adresa_mesto', models.CharField(max_length=200, null=True, verbose_name='Adresa – PSČ a mesto')),
                ('adresa_stat', models.CharField(max_length=100, null=True, verbose_name='Adresa – štát')),
                ('datum_aktualizacie', models.DateField(auto_now=True, null=True, verbose_name='Dátum aktualizácie')),
                ('nazov', models.CharField(max_length=200, verbose_name='Názov')),
                ('s_danou', models.CharField(choices=[('ano', 'Áno'), ('nie', 'Nie')], help_text="Uveďte 'Áno', ak dodávateľ fakturuje s DPH, inak uveďte 'Nie'", max_length=3, null=True, verbose_name='Fakturované s daňou')),
            ],
            options={
                'verbose_name': 'Dodávateľ',
                'verbose_name_plural': 'Faktúry - Dodávatelia',
            },
        ),
        migrations.CreateModel(
            name='Dohoda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('cislo', models.CharField(max_length=50, verbose_name='Číslo')),
                ('predmet', models.TextField(help_text='Zadajte stručný popis práce (max. 250 znakov, 3 riadky)', max_length=500, null=True, verbose_name='Pracovná činnosť')),
                ('datum_od', models.DateField(help_text='Zadajte dátum začiatku platnosti dohody', null=True, verbose_name='Dátum od')),
                ('datum_do', models.DateField(help_text='Zadajte dátum konca platnosti dohody', null=True, verbose_name='Dátum do')),
                ('subor_dohody', models.FileField(blank=True, help_text="Súbor s textom dohody. Generuje sa akciou 'Vytvoriť subor dohody'", null=True, upload_to=uctovnictvo.models.dohoda_upload_location, verbose_name='Súbor dohody')),
            ],
            options={
                'verbose_name': 'Dohoda',
                'verbose_name_plural': 'Dohody',
            },
        ),
        migrations.CreateModel(
            name='EkonomickaKlasifikacia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kod', models.CharField(help_text='Zadajte kód položky/podpoložky ekonomickej klasifikácie napr. 614 alebo 632001 (bez medzery)', max_length=10, verbose_name='Kód')),
                ('nazov', models.CharField(help_text="Zadajte názov položky/podpoložky ekonomickej klasifikácie napr. 'Granty a transfery'", max_length=100, verbose_name='Názov')),
            ],
            options={
                'verbose_name': 'Ekonomická klasifikácia',
                'verbose_name_plural': 'Klasifikácia - Ekonomická klasifikácia',
            },
        ),
        migrations.CreateModel(
            name='ObjednavkaZmluva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cislo', models.CharField(max_length=50, verbose_name='Číslo')),
                ('predmet', models.CharField(help_text="Zadajte stručný popis, napr. 'Kávovar Saeco' alebo 'Servisná podpora RS Beliana'", max_length=100, verbose_name='Predmet')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('dodavatel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='objednavkazmluva_requests_created', to='uctovnictvo.dodavatel', verbose_name='Dodávateľ')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_uctovnictvo.objednavkazmluva_set+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Objednávka / zmluva',
                'verbose_name_plural': 'Objednávky / zmluvy',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kod', models.CharField(help_text='Zadajte kód programu - napr. 087060J, 0EK1102 alebo 0EK1103', max_length=20, verbose_name='Kód')),
                ('popis', models.CharField(help_text='Popíšte program', max_length=100, verbose_name='Popis')),
            ],
            options={
                'verbose_name': 'Program',
                'verbose_name_plural': 'Klasifikácia - Programy',
            },
        ),
        migrations.CreateModel(
            name='SystemovySubor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subor_nazov', models.CharField(max_length=100, verbose_name='Názov')),
                ('subor_popis', models.TextField(max_length=250, verbose_name='Popis/účel')),
                ('subor', models.FileField(blank=True, null=True, storage=uctovnictvo.storage.OverwriteStorage(), upload_to=uctovnictvo.models.system_file_path)),
            ],
            options={
                'verbose_name': 'Systémový súbor',
                'verbose_name_plural': 'Systémové súbory',
            },
        ),
        migrations.CreateModel(
            name='TypZakazky',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kod', models.CharField(help_text='Zadajte kód typu zákazky, napr. Beliana alebo Ostatné', max_length=20, verbose_name='Kód')),
                ('popis', models.CharField(help_text='Popíšte typ zákazky', max_length=100, verbose_name='Popis')),
            ],
            options={
                'verbose_name': 'Typ zákazky',
                'verbose_name_plural': 'Klasifikácia - Typy zákazky',
            },
        ),
        migrations.CreateModel(
            name='ZamestnanecDohodar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bankovy_kontakt', models.CharField(help_text='Zadajte IBAN bankového účtu.', max_length=200, null=True, verbose_name='Bankový kontakt')),
                ('adresa_ulica', models.CharField(blank=True, max_length=200, null=True, verbose_name='Adresa – ulica a číslo domu')),
                ('adresa_mesto', models.CharField(max_length=200, null=True, verbose_name='Adresa – PSČ a mesto')),
                ('adresa_stat', models.CharField(max_length=100, null=True, verbose_name='Adresa – štát')),
                ('datum_aktualizacie', models.DateField(auto_now=True, null=True, verbose_name='Dátum aktualizácie')),
                ('email', models.EmailField(max_length=200, null=True, verbose_name='Email')),
                ('titul_pred_menom', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titul pred menom')),
                ('meno', models.CharField(max_length=200, verbose_name='Meno')),
                ('priezvisko', models.CharField(max_length=200, verbose_name='Priezvisko')),
                ('titul_za_menom', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titul za menom')),
                ('rodne_cislo', models.CharField(max_length=20, null=True, verbose_name='Rodné číslo')),
                ('poznamka', models.CharField(blank=True, max_length=200, verbose_name='Poznámka')),
                ('datum_nar', models.DateField(null=True, verbose_name='Dátum narodenia')),
                ('rod_priezvisko', models.CharField(blank=True, max_length=100, null=True, verbose_name='Rodné priezvisko')),
                ('miesto_nar', models.CharField(max_length=100, null=True, verbose_name='Miesto narodenia')),
                ('st_prislusnost', models.CharField(max_length=100, null=True, verbose_name='Štátna príslušnosť')),
                ('stav', models.CharField(max_length=100, null=True, verbose_name='Stav')),
                ('poberatel_doch', models.CharField(choices=[('ano', 'Áno'), ('nie', 'Nie')], max_length=10, null=True, verbose_name='Poberateľ dôchodku')),
                ('typ_doch', models.CharField(blank=True, choices=[('starobny', 'starobný'), ('invalidny', 'invalidný'), ('invalidny_vysl', 'invalidný výsluhový'), ('vysluhovy', 'výsluhový po dovŕšení dôchodkového veku'), ('predcasny', 'predčasný (poberateľovi zanikne nárok na výplatu predčasného dôchodku)')], max_length=100, null=True, verbose_name='Typ dôchodku')),
                ('datum_doch', models.DateField(blank=True, help_text='Zadajte dátum vzniku dôchodku', null=True, verbose_name='Dôchodca od')),
                ('ztp', models.CharField(choices=[('ano', 'Áno'), ('nie', 'Nie')], help_text="Uveďte, či osoba je 'ZŤP'", max_length=10, verbose_name='ZŤP')),
                ('datum_ztp', models.DateField(blank=True, help_text="Ak je osoba 'ZŤP, zadajte dátum vzniku ZŤP", null=True, verbose_name='ZŤP od')),
                ('poistovna', models.CharField(choices=[('VsZP', 'VšZP'), ('Dovera', 'Dôvera'), ('Union', 'Union')], max_length=20, null=True, verbose_name='Zdravotná poisťovňa')),
                ('cop', models.CharField(max_length=20, null=True, verbose_name='Číslo OP')),
            ],
            options={
                'verbose_name': 'Zamestnanec / dohodár',
                'verbose_name_plural': 'Zamestnanci / dohodári',
            },
        ),
        migrations.CreateModel(
            name='Zdroj',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kod', models.CharField(help_text='Zadajte kód zdroja - napr. 111, 46 alebo 42', max_length=20, verbose_name='Kód')),
                ('popis', models.CharField(help_text='Popíšte zdroj', max_length=100, verbose_name='Popis')),
            ],
            options={
                'verbose_name': 'Zdroj',
                'verbose_name_plural': 'Klasifikácia - Zdroje',
            },
        ),
        migrations.CreateModel(
            name='DoBPS',
            fields=[
                ('dohoda_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='uctovnictvo.dohoda')),
                ('odmena_celkom', models.DecimalField(decimal_places=2, default=0, help_text='Zadajte celkovú odmenu za vykonanú prácu. Bude vyplatená po odovzdaní práce a výkazu', max_digits=8, verbose_name='Celková suma v EUR')),
                ('hod_mesacne', models.DecimalField(decimal_places=1, default=0, help_text='Uveďte predpokladaný priemerný počet odpracovaných hodín. Počet nesmie v priemere prekračovať 80 hodín mesačne', max_digits=8, verbose_name='Predpokl. počet hodín mesačne')),
                ('datum_ukoncenia', models.DateField(blank=True, help_text='Zadajte dátum predčasného ukončenia platnosti dohody', null=True, verbose_name='Dátum ukončenia')),
            ],
            options={
                'verbose_name': 'Dohoda o bigádnickej práci študentov',
                'verbose_name_plural': 'Dohody - Dohody o bigádnickej práci študentov',
            },
            bases=('uctovnictvo.dohoda',),
        ),
        migrations.CreateModel(
            name='DoPC',
            fields=[
                ('dohoda_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='uctovnictvo.dohoda')),
                ('odmena_mesacne', models.DecimalField(decimal_places=2, default=0, help_text='Dohodnutá mesačná odmena', max_digits=8, verbose_name='Odmena za mesiac')),
                ('hod_mesacne', models.DecimalField(decimal_places=1, default=0, help_text='Dohodnutý počet odpracovaných hodín za mesiac, najviac 40', max_digits=8, verbose_name='Hodín za mesiac')),
                ('datum_ukoncenia', models.DateField(blank=True, help_text='Zadajte dátum predčasného ukončenia platnosti dohody', null=True, verbose_name='Dátum ukončenia')),
            ],
            options={
                'verbose_name': 'Dohoda o pracovnej činnosti',
                'verbose_name_plural': 'Dohody - Dohody o pracovnej činnosti',
            },
            bases=('uctovnictvo.dohoda',),
        ),
        migrations.CreateModel(
            name='DoVP',
            fields=[
                ('dohoda_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='uctovnictvo.dohoda')),
                ('odmena_celkom', models.DecimalField(decimal_places=2, default=0, help_text='Zadajte celkovú odmenu za vykonanú prácu. Bude vyplatená po odovzdaní práce a výkazu', max_digits=8, verbose_name='Celková suma v EUR')),
                ('hod_celkom', models.DecimalField(decimal_places=1, default=0, help_text='Uveďte predpokladaný celkový počet odpracovaných hodín, najviac 350.', max_digits=8, verbose_name='Predpokl. počet hodín')),
                ('id_tsh', models.CharField(blank=True, help_text='Uveďte číslo, pod ktorým dohody vedie TSH', max_length=100, null=True, verbose_name='Číslo pridadené TSH')),
                ('pomocnik', models.CharField(blank=True, help_text='Uveďte zoznam rod. príslušníkov, ktorí budú pomáhať pri vykonávaní činnosti, alebo nechajte prázdne. Pre každého uveďte meno a priezvisko.', max_length=100, null=True, verbose_name='Pomoc rod. príslušníkov')),
            ],
            options={
                'verbose_name': 'Dohoda o vykonaní práce',
                'verbose_name_plural': 'Dohody - Dohody o vykonaní práce',
            },
            bases=('uctovnictvo.dohoda',),
        ),
        migrations.CreateModel(
            name='Objednavka',
            fields=[
                ('objednavkazmluva_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='uctovnictvo.objednavkazmluva')),
                ('objednane_polozky', models.TextField(blank=True, help_text='<p>Po riadkoch zadajte objednávané položky:</p>                <ol>                <li>možnosť: so 4 poľami oddelenými bodkočiarkou v poradí: <b>názov položky</b>; <b>merná jednotka</b> - ks, kg, l, m, m2, m3; <b>množstvo</b>; <b>cena za jednotku bez DPH</b>, napr. <em>Euroobal A4;bal;10;7,50</em>. <br />Cena za jednotlivé položky a celková suma sa dopočíta. Pri výpočte sa berie do úvahy, či dodávateľ účtuje alebo neúčtuje cenu s DPH. </li>                <li>možnosť: ako jednoduchý text bez bodkočiarok, napr. <em>Objednávame tovar podľa priloženej ponuky.</em></li>                </ol>', max_length=5000, null=True, verbose_name='Objednané položky')),
                ('datum_vytvorenia', models.DateField(blank=True, default=datetime.datetime.now, help_text='Zadajte dátum vytvorenia objednávky', null=True, verbose_name='Dátum vytvorenia')),
                ('subor_objednavky', models.FileField(blank=True, help_text="Súbor s objednávkou a krycím listom. Generuje sa akciou 'Vytvoriť objednávku'", null=True, upload_to=uctovnictvo.models.objednavka_upload_location, verbose_name='Súbor objednávky')),
                ('termin_dodania', models.CharField(blank=True, help_text="Určite termín dodania (dátum alebo slovné určenie, napr. 'ihneď')", max_length=30, null=True, verbose_name='Termím dodania')),
            ],
            options={
                'verbose_name': 'Objednávka',
                'verbose_name_plural': 'Faktúry - Objednávky',
            },
            bases=('uctovnictvo.objednavkazmluva',),
        ),
        migrations.CreateModel(
            name='Rozhodnutie',
            fields=[
                ('objednavkazmluva_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='uctovnictvo.objednavkazmluva')),
            ],
            options={
                'verbose_name': 'Rozhodnutie',
                'verbose_name_plural': 'Faktúry - Rozhodnutia',
            },
            bases=('uctovnictvo.objednavkazmluva',),
        ),
        migrations.CreateModel(
            name='Zmluva',
            fields=[
                ('objednavkazmluva_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='uctovnictvo.objednavkazmluva')),
                ('url_zmluvy', models.URLField(blank=True, help_text='Zadajte URL pdf súboru zmluvy zo stránky CRZ.', null=True, verbose_name='URL zmluvy')),
                ('datum_zverejnenia_CRZ', models.DateField(blank=True, help_text='Zadajte dátum účinnosti zmluvy (dátum zverejnenia v CRZ + 1 deň).', null=True, verbose_name='Platná od')),
                ('trvala_zmluva', models.CharField(choices=[('ano', 'Áno'), ('nie', 'Nie')], default='ano', help_text="Uveďte 'Áno', ak ide o trvalú zmluvu (očakáva sa viacero faktúr), inak uveďte 'Nie' (ako napr. zmluvy s LITA)", max_length=3, verbose_name='Trvalá zmluva')),
            ],
            options={
                'verbose_name': 'Zmluva',
                'verbose_name_plural': 'Faktúry - Zmluvy',
            },
            bases=('uctovnictvo.objednavkazmluva',),
        ),
        migrations.CreateModel(
            name='VyplacanieDohod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vyplatena_odmena', models.DecimalField(decimal_places=2, default=0, help_text='Uveďte vyplatenú sumu', max_digits=8, verbose_name='Vyplatená odmena v EUR')),
                ('datum_vyplatenia', models.DateField(blank=True, default=datetime.datetime.now, help_text='Zadajte dátum vyplatenia dohody', null=True, verbose_name='Dátum vyplatenia dohody')),
                ('dohoda', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vyplacanie', to='uctovnictvo.dohoda', verbose_name='Dohoda')),
            ],
            options={
                'verbose_name': 'Vyplatenie dohody',
                'verbose_name_plural': 'Dohody - Vyplácanie dohôd',
            },
        ),
        migrations.CreateModel(
            name='PrispevokNaStravne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('cislo', models.CharField(max_length=50, verbose_name='Číslo príspevku (za mesiac)')),
                ('suma_zamestnavatel', models.DecimalField(decimal_places=2, default=0, help_text='Zadajte celkový príspevok zamestnávateľa (Ek. klas. 642014) ako zápornú hodnotu', max_digits=8, verbose_name='Príspevok zamesnávateľa')),
                ('suma_socfond', models.DecimalField(decimal_places=2, default=0, help_text='Zadajte celkový príspevok zo sociálneho fondu ako zápornú hodnotu1', max_digits=8, verbose_name='Príspevok zo soc. fondu')),
                ('ekoklas', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prispevoknastravne_klasifikacia', to='uctovnictvo.ekonomickaklasifikacia', verbose_name='Ekonomická klasifikácia')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prispevoknastravne_klasifikacia', to='uctovnictvo.program')),
                ('zakazka', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prispevoknastravne_klasifikacia', to='uctovnictvo.typzakazky', verbose_name='Typ zákazky')),
                ('zdroj', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prispevoknastravne_klasifikacia', to='uctovnictvo.zdroj')),
            ],
            options={
                'verbose_name': 'Príspevok na stravné',
                'verbose_name_plural': 'Príspevky na stravné',
            },
        ),
        migrations.CreateModel(
            name='PrijataFaktura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('cislo', models.CharField(max_length=50, verbose_name='Číslo faktúry')),
                ('dcislo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Dodávateľské číslo faktúry')),
                ('doslo_datum', models.DateField(blank=True, null=True, verbose_name='Došlo dňa')),
                ('dane_na_uhradu', models.DateField(blank=True, null=True, verbose_name='Dané na úhradu dňa')),
                ('splatnost_datum', models.DateField(blank=True, null=True, verbose_name='Dátum splatnosti')),
                ('predmet', models.CharField(help_text="Zadajte stručný popis, napr. 'Dodávka a inštalácia dátoveho rozvádzača'", max_length=100, verbose_name='Predmet faktúry')),
                ('suma', models.DecimalField(decimal_places=2, default=0, help_text='Zadajte príjmy ako kladné, výdavky ako záporné číslo', max_digits=8, verbose_name='Suma v EUR')),
                ('mena', models.CharField(choices=[('EUR', 'Eur'), ('CZK', 'Czk'), ('USD', 'Usd')], default='EUR', max_length=3, verbose_name='Mena')),
                ('prijata_faktura', models.FileField(blank=True, help_text='Súbor s faktúrou od dodávateľa', null=True, upload_to=uctovnictvo.models.prijata_faktura_upload_location, verbose_name='Faktúra dodádateľa')),
                ('platobny_prikaz', models.FileField(blank=True, help_text="Súbor s platobným príkazom a krycím listom pre THS-ku. Generuje sa akciou 'Vytvoriť platobný príkaz a krycí list pre THS'", null=True, upload_to=uctovnictvo.models.platobny_prikaz_upload_location, verbose_name='Platobný príkaz pre THS-ku')),
                ('ekoklas', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prijatafaktura_klasifikacia', to='uctovnictvo.ekonomickaklasifikacia', verbose_name='Ekonomická klasifikácia')),
                ('objednavka_zmluva', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='faktury', to='uctovnictvo.objednavkazmluva', verbose_name='Objednávka / zmluva')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prijatafaktura_klasifikacia', to='uctovnictvo.program')),
                ('zakazka', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prijatafaktura_klasifikacia', to='uctovnictvo.typzakazky', verbose_name='Typ zákazky')),
                ('zdroj', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prijatafaktura_klasifikacia', to='uctovnictvo.zdroj')),
            ],
            options={
                'verbose_name': 'Prijatá faktúra',
                'verbose_name_plural': 'Faktúry - Prijaté faktúry',
            },
        ),
        migrations.CreateModel(
            name='PlatovyVymer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('cislo_zamestnanca', models.CharField(max_length=50, null=True, verbose_name='Číslo zamestnanca')),
                ('suborvymer', models.FileField(blank=True, help_text='Vložte zoskenovaný platový výmer (vytvorený mzdovou účtárňou)', null=True, storage=uctovnictvo.storage.OverwriteStorage(), upload_to=uctovnictvo.models.vymer_file_path, verbose_name='Súbor s platovým výmerom')),
                ('datum_od', models.DateField(help_text='Zadajte dátum začiatku platnosti výmeru', null=True, verbose_name='Dátum od')),
                ('datum_do', models.DateField(blank=True, help_text='Nechajte prázdne alebo zadajte dátum ukončenia prac. pomeru. Ak sa pre zamestnanca vytvorí nový výmer, toto pole v predchádzajúcom výmere sa vyplní automaticky, čím sa jeho platnosť ukončí', null=True, verbose_name='Dátum do')),
                ('tarifny_plat', models.DecimalField(decimal_places=2, default=0, help_text='Tarifný plat podľa prílohy č. 5 zákona', max_digits=8, verbose_name='Tarifný plat')),
                ('osobny_priplatok', models.DecimalField(decimal_places=2, default=0, help_text='Osobný príplatok podľa § 10 zákona', max_digits=8, verbose_name='Osobný príplatok')),
                ('funkcny_priplatok', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Funkčný príplatok')),
                ('platova_trieda', models.IntegerField(null=True, verbose_name='Platová trieda')),
                ('platovy_stupen', models.IntegerField(null=True, verbose_name='Platový stupeň')),
                ('uvazok', models.DecimalField(decimal_places=2, default=0, help_text='Zadajte pracovný úväzok týždenne (najviac 37,5 hod)', max_digits=8, verbose_name='Úväzok (hod/týždeň)')),
                ('praxroky', models.IntegerField(blank=True, help_text='Pri vytváraní prvého výmeru pre zamestnanca vložte počet rokov započítanej odbornej praxe, inak nechajte prázdne. Po ukončení platnosti výmeru (ukončenie prac. pomeru alebo vytvorenie nového výmeru) sa do poľa automaticky vloží hodnota ku dňu jeho ukončenia.', null=True, verbose_name='Prax (roky)')),
                ('praxdni', models.IntegerField(blank=True, help_text='Pri vytváraní prvého výmeru pre zamestnanca vložte počet dní započítanej odbornej praxe, inak nechajte prázdne. Po ukončení platnosti výmeru (ukončenie prac. pomeru alebo vytvorenie nového výmeru) sa do poľa automaticky vloží hodnota ku dňu jeho ukončenia.', null=True, verbose_name='Prax (dni)')),
                ('ekoklas', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='platovyvymer_klasifikacia', to='uctovnictvo.ekonomickaklasifikacia', verbose_name='Ekonomická klasifikácia')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_uctovnictvo.platovyvymer_set+', to='contenttypes.contenttype')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='platovyvymer_klasifikacia', to='uctovnictvo.program')),
                ('zakazka', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='platovyvymer_klasifikacia', to='uctovnictvo.typzakazky', verbose_name='Typ zákazky')),
                ('zamestnanec', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='platovyvymer_zamestnanec', to='uctovnictvo.zamestnanecdohodar', verbose_name='Zamestnanec')),
                ('zdroj', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='platovyvymer_klasifikacia', to='uctovnictvo.zdroj')),
            ],
            options={
                'verbose_name': 'Platový výmer',
                'verbose_name_plural': 'Platové výmery',
            },
        ),
        migrations.CreateModel(
            name='HistoricalZmluva',
            fields=[
                ('objednavkazmluva_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='uctovnictvo.objednavkazmluva')),
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('cislo', models.CharField(max_length=50, verbose_name='Číslo')),
                ('predmet', models.CharField(help_text="Zadajte stručný popis, napr. 'Kávovar Saeco' alebo 'Servisná podpora RS Beliana'", max_length=100, verbose_name='Predmet')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('url_zmluvy', models.URLField(blank=True, help_text='Zadajte URL pdf súboru zmluvy zo stránky CRZ.', null=True, verbose_name='URL zmluvy')),
                ('datum_zverejnenia_CRZ', models.DateField(blank=True, help_text='Zadajte dátum účinnosti zmluvy (dátum zverejnenia v CRZ + 1 deň).', null=True, verbose_name='Platná od')),
                ('trvala_zmluva', models.CharField(choices=[('ano', 'Áno'), ('nie', 'Nie')], default='ano', help_text="Uveďte 'Áno', ak ide o trvalú zmluvu (očakáva sa viacero faktúr), inak uveďte 'Nie' (ako napr. zmluvy s LITA)", max_length=3, verbose_name='Trvalá zmluva')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('dodavatel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.dodavatel', verbose_name='Dodávateľ')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('polymorphic_ctype', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical Zmluva',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalZdroj',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('kod', models.CharField(help_text='Zadajte kód zdroja - napr. 111, 46 alebo 42', max_length=20, verbose_name='Kód')),
                ('popis', models.CharField(help_text='Popíšte zdroj', max_length=100, verbose_name='Popis')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Zdroj',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalZamestnanecDohodar',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('bankovy_kontakt', models.CharField(help_text='Zadajte IBAN bankového účtu.', max_length=200, null=True, verbose_name='Bankový kontakt')),
                ('adresa_ulica', models.CharField(blank=True, max_length=200, null=True, verbose_name='Adresa – ulica a číslo domu')),
                ('adresa_mesto', models.CharField(max_length=200, null=True, verbose_name='Adresa – PSČ a mesto')),
                ('adresa_stat', models.CharField(max_length=100, null=True, verbose_name='Adresa – štát')),
                ('datum_aktualizacie', models.DateField(blank=True, editable=False, null=True, verbose_name='Dátum aktualizácie')),
                ('email', models.EmailField(max_length=200, null=True, verbose_name='Email')),
                ('titul_pred_menom', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titul pred menom')),
                ('meno', models.CharField(max_length=200, verbose_name='Meno')),
                ('priezvisko', models.CharField(max_length=200, verbose_name='Priezvisko')),
                ('titul_za_menom', models.CharField(blank=True, max_length=100, null=True, verbose_name='Titul za menom')),
                ('rodne_cislo', models.CharField(max_length=20, null=True, verbose_name='Rodné číslo')),
                ('poznamka', models.CharField(blank=True, max_length=200, verbose_name='Poznámka')),
                ('datum_nar', models.DateField(null=True, verbose_name='Dátum narodenia')),
                ('rod_priezvisko', models.CharField(blank=True, max_length=100, null=True, verbose_name='Rodné priezvisko')),
                ('miesto_nar', models.CharField(max_length=100, null=True, verbose_name='Miesto narodenia')),
                ('st_prislusnost', models.CharField(max_length=100, null=True, verbose_name='Štátna príslušnosť')),
                ('stav', models.CharField(max_length=100, null=True, verbose_name='Stav')),
                ('poberatel_doch', models.CharField(choices=[('ano', 'Áno'), ('nie', 'Nie')], max_length=10, null=True, verbose_name='Poberateľ dôchodku')),
                ('typ_doch', models.CharField(blank=True, choices=[('starobny', 'starobný'), ('invalidny', 'invalidný'), ('invalidny_vysl', 'invalidný výsluhový'), ('vysluhovy', 'výsluhový po dovŕšení dôchodkového veku'), ('predcasny', 'predčasný (poberateľovi zanikne nárok na výplatu predčasného dôchodku)')], max_length=100, null=True, verbose_name='Typ dôchodku')),
                ('datum_doch', models.DateField(blank=True, help_text='Zadajte dátum vzniku dôchodku', null=True, verbose_name='Dôchodca od')),
                ('ztp', models.CharField(choices=[('ano', 'Áno'), ('nie', 'Nie')], help_text="Uveďte, či osoba je 'ZŤP'", max_length=10, verbose_name='ZŤP')),
                ('datum_ztp', models.DateField(blank=True, help_text="Ak je osoba 'ZŤP, zadajte dátum vzniku ZŤP", null=True, verbose_name='ZŤP od')),
                ('poistovna', models.CharField(choices=[('VsZP', 'VšZP'), ('Dovera', 'Dôvera'), ('Union', 'Union')], max_length=20, null=True, verbose_name='Zdravotná poisťovňa')),
                ('cop', models.CharField(max_length=20, null=True, verbose_name='Číslo OP')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Zamestnanec / dohodár',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalVyplacanieDohod',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('vyplatena_odmena', models.DecimalField(decimal_places=2, default=0, help_text='Uveďte vyplatenú sumu', max_digits=8, verbose_name='Vyplatená odmena v EUR')),
                ('datum_vyplatenia', models.DateField(blank=True, default=datetime.datetime.now, help_text='Zadajte dátum vyplatenia dohody', null=True, verbose_name='Dátum vyplatenia dohody')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('dohoda', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.dohoda', verbose_name='Dohoda')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Vyplatenie dohody',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTypZakazky',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('kod', models.CharField(help_text='Zadajte kód typu zákazky, napr. Beliana alebo Ostatné', max_length=20, verbose_name='Kód')),
                ('popis', models.CharField(help_text='Popíšte typ zákazky', max_length=100, verbose_name='Popis')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Typ zákazky',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSystemovySubor',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('subor_nazov', models.CharField(max_length=100, verbose_name='Názov')),
                ('subor_popis', models.TextField(max_length=250, verbose_name='Popis/účel')),
                ('subor', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Systémový súbor',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRozhodnutie',
            fields=[
                ('objednavkazmluva_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='uctovnictvo.objednavkazmluva')),
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('cislo', models.CharField(max_length=50, verbose_name='Číslo')),
                ('predmet', models.CharField(help_text="Zadajte stručný popis, napr. 'Kávovar Saeco' alebo 'Servisná podpora RS Beliana'", max_length=100, verbose_name='Predmet')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('dodavatel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.dodavatel', verbose_name='Dodávateľ')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('polymorphic_ctype', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical Rozhodnutie',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProgram',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('kod', models.CharField(help_text='Zadajte kód programu - napr. 087060J, 0EK1102 alebo 0EK1103', max_length=20, verbose_name='Kód')),
                ('popis', models.CharField(help_text='Popíšte program', max_length=100, verbose_name='Popis')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Program',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPrispevokNaStravne',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('cislo', models.CharField(max_length=50, verbose_name='Číslo príspevku (za mesiac)')),
                ('suma_zamestnavatel', models.DecimalField(decimal_places=2, default=0, help_text='Zadajte celkový príspevok zamestnávateľa (Ek. klas. 642014) ako zápornú hodnotu', max_digits=8, verbose_name='Príspevok zamesnávateľa')),
                ('suma_socfond', models.DecimalField(decimal_places=2, default=0, help_text='Zadajte celkový príspevok zo sociálneho fondu ako zápornú hodnotu1', max_digits=8, verbose_name='Príspevok zo soc. fondu')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('ekoklas', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.ekonomickaklasifikacia', verbose_name='Ekonomická klasifikácia')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.program')),
                ('zakazka', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.typzakazky', verbose_name='Typ zákazky')),
                ('zdroj', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.zdroj')),
            ],
            options={
                'verbose_name': 'historical Príspevok na stravné',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPrijataFaktura',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('cislo', models.CharField(max_length=50, verbose_name='Číslo faktúry')),
                ('dcislo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Dodávateľské číslo faktúry')),
                ('doslo_datum', models.DateField(blank=True, null=True, verbose_name='Došlo dňa')),
                ('dane_na_uhradu', models.DateField(blank=True, null=True, verbose_name='Dané na úhradu dňa')),
                ('splatnost_datum', models.DateField(blank=True, null=True, verbose_name='Dátum splatnosti')),
                ('predmet', models.CharField(help_text="Zadajte stručný popis, napr. 'Dodávka a inštalácia dátoveho rozvádzača'", max_length=100, verbose_name='Predmet faktúry')),
                ('suma', models.DecimalField(decimal_places=2, default=0, help_text='Zadajte príjmy ako kladné, výdavky ako záporné číslo', max_digits=8, verbose_name='Suma v EUR')),
                ('mena', models.CharField(choices=[('EUR', 'Eur'), ('CZK', 'Czk'), ('USD', 'Usd')], default='EUR', max_length=3, verbose_name='Mena')),
                ('prijata_faktura', models.TextField(blank=True, help_text='Súbor s faktúrou od dodávateľa', max_length=100, null=True, verbose_name='Faktúra dodádateľa')),
                ('platobny_prikaz', models.TextField(blank=True, help_text="Súbor s platobným príkazom a krycím listom pre THS-ku. Generuje sa akciou 'Vytvoriť platobný príkaz a krycí list pre THS'", max_length=100, null=True, verbose_name='Platobný príkaz pre THS-ku')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('ekoklas', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.ekonomickaklasifikacia', verbose_name='Ekonomická klasifikácia')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('objednavka_zmluva', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.objednavkazmluva', verbose_name='Objednávka / zmluva')),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.program')),
                ('zakazka', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.typzakazky', verbose_name='Typ zákazky')),
                ('zdroj', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.zdroj')),
            ],
            options={
                'verbose_name': 'historical Prijatá faktúra',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPlatovyVymer',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('cislo_zamestnanca', models.CharField(max_length=50, null=True, verbose_name='Číslo zamestnanca')),
                ('suborvymer', models.TextField(blank=True, help_text='Vložte zoskenovaný platový výmer (vytvorený mzdovou účtárňou)', max_length=100, null=True, verbose_name='Súbor s platovým výmerom')),
                ('datum_od', models.DateField(help_text='Zadajte dátum začiatku platnosti výmeru', null=True, verbose_name='Dátum od')),
                ('datum_do', models.DateField(blank=True, help_text='Nechajte prázdne alebo zadajte dátum ukončenia prac. pomeru. Ak sa pre zamestnanca vytvorí nový výmer, toto pole v predchádzajúcom výmere sa vyplní automaticky, čím sa jeho platnosť ukončí', null=True, verbose_name='Dátum do')),
                ('tarifny_plat', models.DecimalField(decimal_places=2, default=0, help_text='Tarifný plat podľa prílohy č. 5 zákona', max_digits=8, verbose_name='Tarifný plat')),
                ('osobny_priplatok', models.DecimalField(decimal_places=2, default=0, help_text='Osobný príplatok podľa § 10 zákona', max_digits=8, verbose_name='Osobný príplatok')),
                ('funkcny_priplatok', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Funkčný príplatok')),
                ('platova_trieda', models.IntegerField(null=True, verbose_name='Platová trieda')),
                ('platovy_stupen', models.IntegerField(null=True, verbose_name='Platový stupeň')),
                ('uvazok', models.DecimalField(decimal_places=2, default=0, help_text='Zadajte pracovný úväzok týždenne (najviac 37,5 hod)', max_digits=8, verbose_name='Úväzok (hod/týždeň)')),
                ('praxroky', models.IntegerField(blank=True, help_text='Pri vytváraní prvého výmeru pre zamestnanca vložte počet rokov započítanej odbornej praxe, inak nechajte prázdne. Po ukončení platnosti výmeru (ukončenie prac. pomeru alebo vytvorenie nového výmeru) sa do poľa automaticky vloží hodnota ku dňu jeho ukončenia.', null=True, verbose_name='Prax (roky)')),
                ('praxdni', models.IntegerField(blank=True, help_text='Pri vytváraní prvého výmeru pre zamestnanca vložte počet dní započítanej odbornej praxe, inak nechajte prázdne. Po ukončení platnosti výmeru (ukončenie prac. pomeru alebo vytvorenie nového výmeru) sa do poľa automaticky vloží hodnota ku dňu jeho ukončenia.', null=True, verbose_name='Prax (dni)')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('ekoklas', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.ekonomickaklasifikacia', verbose_name='Ekonomická klasifikácia')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('polymorphic_ctype', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.program')),
                ('zakazka', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.typzakazky', verbose_name='Typ zákazky')),
                ('zamestnanec', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.zamestnanecdohodar', verbose_name='Zamestnanec')),
                ('zdroj', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.zdroj')),
            ],
            options={
                'verbose_name': 'historical Platový výmer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalObjednavkaZmluva',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('cislo', models.CharField(max_length=50, verbose_name='Číslo')),
                ('predmet', models.CharField(help_text="Zadajte stručný popis, napr. 'Kávovar Saeco' alebo 'Servisná podpora RS Beliana'", max_length=100, verbose_name='Predmet')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('dodavatel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.dodavatel', verbose_name='Dodávateľ')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('polymorphic_ctype', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical Objednávka / zmluva',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalObjednavka',
            fields=[
                ('objednavkazmluva_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='uctovnictvo.objednavkazmluva')),
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('cislo', models.CharField(max_length=50, verbose_name='Číslo')),
                ('predmet', models.CharField(help_text="Zadajte stručný popis, napr. 'Kávovar Saeco' alebo 'Servisná podpora RS Beliana'", max_length=100, verbose_name='Predmet')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('objednane_polozky', models.TextField(blank=True, help_text='<p>Po riadkoch zadajte objednávané položky:</p>                <ol>                <li>možnosť: so 4 poľami oddelenými bodkočiarkou v poradí: <b>názov položky</b>; <b>merná jednotka</b> - ks, kg, l, m, m2, m3; <b>množstvo</b>; <b>cena za jednotku bez DPH</b>, napr. <em>Euroobal A4;bal;10;7,50</em>. <br />Cena za jednotlivé položky a celková suma sa dopočíta. Pri výpočte sa berie do úvahy, či dodávateľ účtuje alebo neúčtuje cenu s DPH. </li>                <li>možnosť: ako jednoduchý text bez bodkočiarok, napr. <em>Objednávame tovar podľa priloženej ponuky.</em></li>                </ol>', max_length=5000, null=True, verbose_name='Objednané položky')),
                ('datum_vytvorenia', models.DateField(blank=True, default=datetime.datetime.now, help_text='Zadajte dátum vytvorenia objednávky', null=True, verbose_name='Dátum vytvorenia')),
                ('subor_objednavky', models.TextField(blank=True, help_text="Súbor s objednávkou a krycím listom. Generuje sa akciou 'Vytvoriť objednávku'", max_length=100, null=True, verbose_name='Súbor objednávky')),
                ('termin_dodania', models.CharField(blank=True, help_text="Určite termín dodania (dátum alebo slovné určenie, napr. 'ihneď')", max_length=30, null=True, verbose_name='Termím dodania')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('dodavatel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.dodavatel', verbose_name='Dodávateľ')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('polymorphic_ctype', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical Objednávka',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEkonomickaKlasifikacia',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('kod', models.CharField(help_text='Zadajte kód položky/podpoložky ekonomickej klasifikácie napr. 614 alebo 632001 (bez medzery)', max_length=10, verbose_name='Kód')),
                ('nazov', models.CharField(help_text="Zadajte názov položky/podpoložky ekonomickej klasifikácie napr. 'Granty a transfery'", max_length=100, verbose_name='Názov')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Ekonomická klasifikácia',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDoVP',
            fields=[
                ('dohoda_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='uctovnictvo.dohoda')),
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('cislo', models.CharField(max_length=50, verbose_name='Číslo')),
                ('predmet', models.TextField(help_text='Zadajte stručný popis práce (max. 250 znakov, 3 riadky)', max_length=500, null=True, verbose_name='Pracovná činnosť')),
                ('datum_od', models.DateField(help_text='Zadajte dátum začiatku platnosti dohody', null=True, verbose_name='Dátum od')),
                ('datum_do', models.DateField(help_text='Zadajte dátum konca platnosti dohody', null=True, verbose_name='Dátum do')),
                ('subor_dohody', models.TextField(blank=True, help_text="Súbor s textom dohody. Generuje sa akciou 'Vytvoriť subor dohody'", max_length=100, null=True, verbose_name='Súbor dohody')),
                ('odmena_celkom', models.DecimalField(decimal_places=2, default=0, help_text='Zadajte celkovú odmenu za vykonanú prácu. Bude vyplatená po odovzdaní práce a výkazu', max_digits=8, verbose_name='Celková suma v EUR')),
                ('hod_celkom', models.DecimalField(decimal_places=1, default=0, help_text='Uveďte predpokladaný celkový počet odpracovaných hodín, najviac 350.', max_digits=8, verbose_name='Predpokl. počet hodín')),
                ('id_tsh', models.CharField(blank=True, help_text='Uveďte číslo, pod ktorým dohody vedie TSH', max_length=100, null=True, verbose_name='Číslo pridadené TSH')),
                ('pomocnik', models.CharField(blank=True, help_text='Uveďte zoznam rod. príslušníkov, ktorí budú pomáhať pri vykonávaní činnosti, alebo nechajte prázdne. Pre každého uveďte meno a priezvisko.', max_length=100, null=True, verbose_name='Pomoc rod. príslušníkov')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('ekoklas', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.ekonomickaklasifikacia', verbose_name='Ekonomická klasifikácia')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('polymorphic_ctype', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.program')),
                ('zakazka', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.typzakazky', verbose_name='Typ zákazky')),
                ('zdroj', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.zdroj')),
                ('zmluvna_strana', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.zamestnanecdohodar', verbose_name='Zmluvná strana')),
            ],
            options={
                'verbose_name': 'historical Dohoda o vykonaní práce',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDoPC',
            fields=[
                ('dohoda_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='uctovnictvo.dohoda')),
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('cislo', models.CharField(max_length=50, verbose_name='Číslo')),
                ('predmet', models.TextField(help_text='Zadajte stručný popis práce (max. 250 znakov, 3 riadky)', max_length=500, null=True, verbose_name='Pracovná činnosť')),
                ('datum_od', models.DateField(help_text='Zadajte dátum začiatku platnosti dohody', null=True, verbose_name='Dátum od')),
                ('datum_do', models.DateField(help_text='Zadajte dátum konca platnosti dohody', null=True, verbose_name='Dátum do')),
                ('subor_dohody', models.TextField(blank=True, help_text="Súbor s textom dohody. Generuje sa akciou 'Vytvoriť subor dohody'", max_length=100, null=True, verbose_name='Súbor dohody')),
                ('odmena_mesacne', models.DecimalField(decimal_places=2, default=0, help_text='Dohodnutá mesačná odmena', max_digits=8, verbose_name='Odmena za mesiac')),
                ('hod_mesacne', models.DecimalField(decimal_places=1, default=0, help_text='Dohodnutý počet odpracovaných hodín za mesiac, najviac 40', max_digits=8, verbose_name='Hodín za mesiac')),
                ('datum_ukoncenia', models.DateField(blank=True, help_text='Zadajte dátum predčasného ukončenia platnosti dohody', null=True, verbose_name='Dátum ukončenia')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('ekoklas', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.ekonomickaklasifikacia', verbose_name='Ekonomická klasifikácia')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('polymorphic_ctype', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.program')),
                ('zakazka', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.typzakazky', verbose_name='Typ zákazky')),
                ('zdroj', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.zdroj')),
                ('zmluvna_strana', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.zamestnanecdohodar', verbose_name='Zmluvná strana')),
            ],
            options={
                'verbose_name': 'historical Dohoda o pracovnej činnosti',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDodavatel',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('bankovy_kontakt', models.CharField(help_text='Zadajte IBAN bankového účtu.', max_length=200, null=True, verbose_name='Bankový kontakt')),
                ('adresa_ulica', models.CharField(blank=True, max_length=200, null=True, verbose_name='Adresa – ulica a číslo domu')),
                ('adresa_mesto', models.CharField(max_length=200, null=True, verbose_name='Adresa – PSČ a mesto')),
                ('adresa_stat', models.CharField(max_length=100, null=True, verbose_name='Adresa – štát')),
                ('datum_aktualizacie', models.DateField(blank=True, editable=False, null=True, verbose_name='Dátum aktualizácie')),
                ('nazov', models.CharField(max_length=200, verbose_name='Názov')),
                ('s_danou', models.CharField(choices=[('ano', 'Áno'), ('nie', 'Nie')], help_text="Uveďte 'Áno', ak dodávateľ fakturuje s DPH, inak uveďte 'Nie'", max_length=3, null=True, verbose_name='Fakturované s daňou')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Dodávateľ',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDoBPS',
            fields=[
                ('dohoda_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='uctovnictvo.dohoda')),
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('cislo', models.CharField(max_length=50, verbose_name='Číslo')),
                ('predmet', models.TextField(help_text='Zadajte stručný popis práce (max. 250 znakov, 3 riadky)', max_length=500, null=True, verbose_name='Pracovná činnosť')),
                ('datum_od', models.DateField(help_text='Zadajte dátum začiatku platnosti dohody', null=True, verbose_name='Dátum od')),
                ('datum_do', models.DateField(help_text='Zadajte dátum konca platnosti dohody', null=True, verbose_name='Dátum do')),
                ('subor_dohody', models.TextField(blank=True, help_text="Súbor s textom dohody. Generuje sa akciou 'Vytvoriť subor dohody'", max_length=100, null=True, verbose_name='Súbor dohody')),
                ('odmena_celkom', models.DecimalField(decimal_places=2, default=0, help_text='Zadajte celkovú odmenu za vykonanú prácu. Bude vyplatená po odovzdaní práce a výkazu', max_digits=8, verbose_name='Celková suma v EUR')),
                ('hod_mesacne', models.DecimalField(decimal_places=1, default=0, help_text='Uveďte predpokladaný priemerný počet odpracovaných hodín. Počet nesmie v priemere prekračovať 80 hodín mesačne', max_digits=8, verbose_name='Predpokl. počet hodín mesačne')),
                ('datum_ukoncenia', models.DateField(blank=True, help_text='Zadajte dátum predčasného ukončenia platnosti dohody', null=True, verbose_name='Dátum ukončenia')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('ekoklas', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.ekonomickaklasifikacia', verbose_name='Ekonomická klasifikácia')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('polymorphic_ctype', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.program')),
                ('zakazka', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.typzakazky', verbose_name='Typ zákazky')),
                ('zdroj', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.zdroj')),
                ('zmluvna_strana', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.zamestnanecdohodar', verbose_name='Zmluvná strana')),
            ],
            options={
                'verbose_name': 'historical Dohoda o bigádnickej práci študentov',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAutorskyHonorar',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('cislo', models.CharField(max_length=50, verbose_name='Číslo platby')),
                ('doslo_datum', models.DateField(blank=True, null=True, verbose_name='Vyplatené dňa')),
                ('suma', models.DecimalField(decimal_places=2, default=0, help_text="Zadajte honorár vyplatený autorom ako záporné číslo (stĺpec'Vyplatené spolu' z tabuľky Zmluvy / Vyplácanie aut. honorárov)", max_digits=8, verbose_name='Vyplatená suma')),
                ('suma_lf', models.DecimalField(decimal_places=2, default=0, help_text="Zadajte sumu odvevenú Literárnemu fondu ako záporné číslo (stĺpec'Odvod LF' z tabuľky Zmluvy / Vyplácanie aut. honorárov)", max_digits=8, verbose_name='Odvedená suma Literárnemu fondu')),
                ('suma_dan', models.DecimalField(decimal_places=2, default=0, help_text="Zadajte daň odvevenú Finančnej správe záporné číslo (stĺpec 'Odvedená daň' z tabuľky Zmluvy / Vyplácanie aut. honorárov)", max_digits=8, verbose_name='Odvedená daň')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('ekoklas', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.ekonomickaklasifikacia', verbose_name='Ekonomická klasifikácia')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.program')),
                ('zakazka', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.typzakazky', verbose_name='Typ zákazky')),
                ('zdroj', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='uctovnictvo.zdroj')),
            ],
            options={
                'verbose_name': 'historical Autorský honorár',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='dohoda',
            name='ekoklas',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dohoda_klasifikacia', to='uctovnictvo.ekonomickaklasifikacia', verbose_name='Ekonomická klasifikácia'),
        ),
        migrations.AddField(
            model_name='dohoda',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_uctovnictvo.dohoda_set+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='dohoda',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dohoda_klasifikacia', to='uctovnictvo.program'),
        ),
        migrations.AddField(
            model_name='dohoda',
            name='zakazka',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dohoda_klasifikacia', to='uctovnictvo.typzakazky', verbose_name='Typ zákazky'),
        ),
        migrations.AddField(
            model_name='dohoda',
            name='zdroj',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dohoda_klasifikacia', to='uctovnictvo.zdroj'),
        ),
        migrations.AddField(
            model_name='dohoda',
            name='zmluvna_strana',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dohoda_dohoda', to='uctovnictvo.zamestnanecdohodar', verbose_name='Zmluvná strana'),
        ),
        migrations.CreateModel(
            name='AutorskyHonorar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poznamka', models.CharField(blank=True, max_length=200, null=True, verbose_name='Poznámka')),
                ('cislo', models.CharField(max_length=50, verbose_name='Číslo platby')),
                ('doslo_datum', models.DateField(blank=True, null=True, verbose_name='Vyplatené dňa')),
                ('suma', models.DecimalField(decimal_places=2, default=0, help_text="Zadajte honorár vyplatený autorom ako záporné číslo (stĺpec'Vyplatené spolu' z tabuľky Zmluvy / Vyplácanie aut. honorárov)", max_digits=8, verbose_name='Vyplatená suma')),
                ('suma_lf', models.DecimalField(decimal_places=2, default=0, help_text="Zadajte sumu odvevenú Literárnemu fondu ako záporné číslo (stĺpec'Odvod LF' z tabuľky Zmluvy / Vyplácanie aut. honorárov)", max_digits=8, verbose_name='Odvedená suma Literárnemu fondu')),
                ('suma_dan', models.DecimalField(decimal_places=2, default=0, help_text="Zadajte daň odvevenú Finančnej správe záporné číslo (stĺpec 'Odvedená daň' z tabuľky Zmluvy / Vyplácanie aut. honorárov)", max_digits=8, verbose_name='Odvedená daň')),
                ('ekoklas', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='autorskyhonorar_klasifikacia', to='uctovnictvo.ekonomickaklasifikacia', verbose_name='Ekonomická klasifikácia')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='autorskyhonorar_klasifikacia', to='uctovnictvo.program')),
                ('zakazka', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='autorskyhonorar_klasifikacia', to='uctovnictvo.typzakazky', verbose_name='Typ zákazky')),
                ('zdroj', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='autorskyhonorar_klasifikacia', to='uctovnictvo.zdroj')),
            ],
            options={
                'verbose_name': 'Autorský honorár',
                'verbose_name_plural': 'Autorské honoráre',
            },
        ),
    ]
